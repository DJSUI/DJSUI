20250627

1 Configure the firewall on servera and serverb such that:
	* Client within　172.25.	250.0/24  have SSH access to your virtual systems  
	* Client within  172.24.250.0/24 do not have remote SSH access to your virtual systems  

	* Configure denial rules to use a "reject" instead of  a "drop"


2 Configure the eth0 on servera and serverb with the following IPv6 address:
	* Servera has the address 2018:ac18::432/64 
	* Serverb has the address 2018:ac18::43c/64 
	* Both systems are reachable from systems in the 2018:ac18/64 network  
	* The address assignments persist across system reboots  
	* Both systems are also reachable via IPv4 at their current address  

3 On servera configure a DHCP server to provide both fixed and dynamic IPv4 address 
	for the 192.168.1.0/24 network as follows:
	* Dynamic configuration 
	* Dynamic IPs must be between 192.168.1.125 and 192.168.1.200 
	* DNS server address  
	* DNS domain name  
	* Default gateway  
	* Default lease time 600 
	* Max lease time 3000 
	fixed address information: 
	* IP 192.168.1.10 is assigned to hardwared to hardware address 52:54:00:02:fa:0c 
	* IP 192.168.1.11 is assigned to hardware address 52:54:00:02:fa:0d

4 On serverb，BIND has been installed，and partially configured.
  Complete the BIND configuration such that your DNS server serves
  both forward and reverse lookups for：
  	* Serverc.rh358.example.com 192.168.1.10
  	* Serverd.rh358.example.com 192.168.1.11 
  	* Make sure that any upstream or downstream caching nameservers are appropriately updated

5 Configure SMB services on servera as follows:
	* The SMB server is a member of the STAFF workgroup
	* The service shares the /groupdir directory.The share's name is common
	* The common share is available to lab.example.com domain clients only
	* The common share is browseable
	* The user barney has read access to the share， authenticating with the password redhat if necessary

6 On servera share the /data directory via SMB as follows:
	* The share is named data
	* The shared data is only available to clients in the lab.example.com domain
	* The shared data is browseable
	* magneter has read access to the share，authenticating with the password redhat
	* wolferyne has read and write access to the share，authenticating with the password redhat
	* The SMB share is permanently mounted on serverb at /mnt/multi using the credentials of magneter
	* The share allows anyone who can authenticate as wolferyne to temporarily acquire write permissions

7 Configure DNS  
	* Configure NFS on servera to export the /public directory with read only access to the lab.example.com domain only

8 Mount an NFS share
	Configure serverb to mount the following NFS share from servera.lab.example.com : 
		* /public is mounted to /mnt/nfsmount
		* The file system is automatically mounted at boot 


9-12 webQs
9 Implement a web server
	Implement a web server on servera for the site and perform the following steps:
		* Download  http://classroom.example.com/station.html  
		* Rename the downloaded file to index.html.Do NOT make any modifications to the content of this file
		* Copy this index.html to the DocumentRoot of your webserver
		* Clients within lab.example.com can access the webserver
		* Clients within my133t.org are denied access to the webserver


10 Configure secure webservices
	* Configure TLS encryption for the web server for https://servera.lab.example.com
	* A signed certificate for the web server can be found at http://classroom.example//servera.crt 
	* The associated key for the certificate is at http://classroom.example.com/files/servera.key
	*  The certificate for the signing authority is at http://classroom.example.com/files/cacert.crt

11 configure a virtual host 
	* The DocumentRoot for the virtual host is /var/www/virtual
	* The DocumentRoot contains a copy  of http://classroom.example.com/files/www.html 
	   named index.html. Do not make any modification to the content of this file  
	* The user barney can create content in /var/www/virtual 
	* The original web site http://servera.lab.examplecom is still accessable  

12 Configure web content access 
	On your web server on servera create a directory named confidential under the DocumentRoot directory and configure it as follows:
		* Copy http://classroom.example.com/file/private.html  into this directory and rename it index.html.Do not change the content of this file  
		* The contents of confidential is visible to anyone browsing from servera (including localhost) but is not accessible from servera (including localhost ) but is not accessible from other locations  


13 Configure servera to provide an iscsI disk device named iqn.2021-09.com.example.lab:servera as follows
		* The iSCSI service use sport 3260 
		* The target uses a 3GiB backing logical volume named iscsi_data
		* The target is only available to serverb.lab.example.com
		* The service is available after a reboot


14 Configure serverb so that it connects to the iqn.2023-08.com.example.lab:servera target on servera as follows:
		* The iSCSI device is automatically available on system boot 
		* The iSCSI block device contains a 2100 MiB partition that is formatted as ext4
		* The partition is mounted to /mnt/data and is automatically mounted to this directory at system boot

15 Create a MariaDB database, named Contacts on servera such that the following conditions exist:
		* The databaase contains the content of the databases dump from http://classroom.example.com/files/users.mdb
		* The database is accessible from localhost only
		* Other than the root user, this database only allows queries from the user student.This user has the password redhat
		* The root user has the password redhat and can not log in without using a password

16&17  Use the database Contacts on servera and the appropriate SQL queries to provide the following information
		* Enter the first name of the person whose password is pass56 Contacts 
		* Number of people named Wilson and Zhao in Qingdao

Ansbile###### 

18 Create a playbook called /home/student/ansible/firewall.yml on control that creates a firewall 
on serverc and serverd as follows	
		* The playbook runs on serverc.lab.example.com and serverd.lab.example.com
		* Clients within 172.25.250.0/24 have remote SSH access to serverc and serverd 
		* Clients within 172.24.250.0/24 do NOT have remote SSH access to either serverc or serverd



19 Create a playbook called /home/devops/ansible/nginx.yml on control that creates an NGINX server
on serverc and serverd as follows
		* The playbook runs on serverc and serverd
		* The NGINX servers use as their  /file/webserver.conf.j2  configuration file
		* The DocumentRoot directory for the NGINX servers is /srv/www/html
		* The DocumentRoot directory contains an index.html  file that is generated from http://file/index.html.j2 
		* Do Not change the content of index.html  
		* The approriate SELinux contexts are set and firewall ports are open for access from lab.example.com 
		* After the playbook has been run it is possible to browse the following sites:
					** Access serverc 
					** Access serverd

20  Create a playbook called /home/devops/ansible/nullclient.yml on control that configures mail on both serverc and serverd according to
the following requirements:
		* The playbook runs on serverc and serverd
		* You may test your configuation by sending email to the local user ‘student'. 
		　The system bastion.lab.example.com has been configured to drop mail for this user into bastion.lab.example.com/mail/student

21 Create a playbook called /home/devops/ansible/printing.yml on control that configures printing on both serverc and serverd according to the
following requirements:
		* The playbook runs on serverc and serverd
		* The systems create a default print queue named my-printer
		* The print queue forwards print jobs to an IPP printer using the URI of ipp://serverc.lab.example.com:631/printers/rht-printer
		* You may test your configuration by sending a print job to the default print queue. The above remote IPP server has been configured to drop
			your print jobs into http://serverd/ippserver/ipp-everywhere-pdf
